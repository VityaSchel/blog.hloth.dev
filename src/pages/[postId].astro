---
import { type CollectionEntry, getCollection, render } from "astro:content";
import BlogPost from "$layouts/BlogPost.astro";
import Category from "$ui/Category.astro";
import ReadTime from "$components/ReadTime.astro";
import Separator from "$ui/Separator.astro";
import PostDate from "$layouts/PostDate.astro";
import PostReactions from "$components/PostReactions.astro";
import PageViews from "$components/PageViews.astro";
import PostTitle from "$components/PostTitle.astro";
import Me from "$components/Me.astro";
import LazyImage from "$components/ui/LazyImage.astro";

export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts.map((post) => ({
		params: { postId: post.id },
		props: post,
	}));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
const { Content } = await render(post);
---

<BlogPost {...post.data}>
	<article class="pt-16">
		<div class="flex flex-col-reverse items-start justify-between md:flex-row">
			<div
				class="flex flex-col gap-8 self-stretch md:max-w-[50%] md:flex-[50%]"
			>
				<div class="flex items-center gap-5">
					<Category category={post.data.category} />
					<ReadTime value={post.data.readTime} />
					<PageViews />
				</div>
				<PostTitle title={post.data.title} />
				<Me />
			</div>
			<div
				class="banner-clip relative mb-8
					w-full overflow-clip md:mb-0 md:w-auto md:max-w-[40%] md:flex-[40%]"
			>
				<LazyImage
					src={post.data.banner}
					alt={post.data.bannerAlt}
					layout="fixed"
					fit="fill"
					draggable={false}
					sizes="(max-width: 768px) 90vw, (max-width: 1168px) 36vw, 38vw"
					priority
					banner
				/>
				<!-- placeholder={banner.placeholder} -->
			</div>
		</div>
		<Separator />
		<div class="flex w-full justify-center">
			<div class="article-content w-full max-w-[680px] break-words">
				<Content />
			</div>
		</div>
		<div class="flex w-full justify-center">
			<div class="flex w-full max-w-[680px] flex-col">
				<div
					class="mt-16 flex w-full flex-col justify-between gap-2 md:mt-8
						md:flex-row md:items-center"
				>
					<PostDate date={post.data.createdAt}>Published at:</PostDate>
					{
						post.data.updatedAt !== undefined && (
							<PostDate date={post.data.updatedAt}>Updated at:</PostDate>
						)
					}
				</div>
				<PostReactions />
			</div>
		</div>
	</article>
</BlogPost>
