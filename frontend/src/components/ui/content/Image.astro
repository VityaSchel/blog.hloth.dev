---
/**
 * Example usage:
 *
 * import testImage from "./test.png";
 *
 * <Image src={testImage} alt="123">
 *   Caption
 * </Image>
 */

import type { Picture } from "astro:assets";
import LazyImage from "$ui/LazyImage.astro";
import type { ComponentProps } from "astro/types";
import type { ImageMetadata } from "astro";

type Props = Pick<
	ComponentProps<typeof Picture>,
	"class" | "height" | "alt" | "children"
> & {
	background?: boolean;
	// border?: boolean;
	src: ImageMetadata;
};

const { background, ...props } = Astro.props;

const aspectRatio = props.src.width / props.src.height;
---

<figure>
	<div
		class:list={[
			"w-full flex items-center justify-center in-[.full-bleed]:w-auto in-[.full-bleed]:flex-1 in-[.full-bleed]:justify-start",
			{
				// border,
				[`flex h-fit max-h-[500px] items-center justify-center overflow-clip
				rounded-lg bg-white dark:bg-black-alt p-4`]: background,
			},
		]}
	>
		<!-- TODO: placeholder -->
		<LazyImage
			width={background
				? Math.min(500 * aspectRatio, 680)
				: props.src.width !== undefined
					? Math.min(props.src.width, 680)
					: undefined}
			height={background ? 500 : props.height}
			class={props.class ?? (background ? "" : undefined)}
			zoomable
			{...props}
		/>
		<!-- sizes={background ? undefined : "(max-width: 728px) 100vw, 680px"} -->
	</div>
	{
		Astro.slots.default && (
			<figcaption>
				<slot />
			</figcaption>
		)
	}
</figure>

<style>
	figcaption {
		flex-shrink: 0;
	}
</style>
